# source: http://localhost:4468
# timestamp: Tue Jul 02 2019 17:04:14 GMT+0100 (British Summer Time)

type AggregateProject {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createProject(data: ProjectCreateInput!): Project!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  deleteUser(where: UserWhereUniqueInput!): User
  deleteProject(where: ProjectWhereUniqueInput!): Project
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertProject(where: ProjectWhereUniqueInput!, create: ProjectCreateInput!, update: ProjectUpdateInput!): Project!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyProjects(data: ProjectUpdateManyMutationInput!, where: ProjectWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyProjects(where: ProjectWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type Project implements Node {
  id: ID!
  name: String!
  strapline: String!
  websiteURL: String!
  websiteImage: String!
  brief: String
  process: String
  adobeUrl: String
  githubUrl: String
  cleanUrl: String!
}

"""A connection to a list of items."""
type ProjectConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProjectEdge]!
  aggregate: AggregateProject!
}

input ProjectCreateInput {
  id: ID
  name: String!
  strapline: String!
  websiteURL: String!
  websiteImage: String!
  brief: String
  process: String
  adobeUrl: String
  githubUrl: String
  cleanUrl: String!
}

"""An edge in a connection."""
type ProjectEdge {
  """The item at the end of the edge."""
  node: Project!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProjectOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  strapline_ASC
  strapline_DESC
  websiteURL_ASC
  websiteURL_DESC
  websiteImage_ASC
  websiteImage_DESC
  brief_ASC
  brief_DESC
  process_ASC
  process_DESC
  adobeUrl_ASC
  adobeUrl_DESC
  githubUrl_ASC
  githubUrl_DESC
  cleanUrl_ASC
  cleanUrl_DESC
}

type ProjectPreviousValues {
  id: ID!
  name: String!
  strapline: String!
  websiteURL: String!
  websiteImage: String!
  brief: String
  process: String
  adobeUrl: String
  githubUrl: String
  cleanUrl: String!
}

type ProjectSubscriptionPayload {
  mutation: MutationType!
  node: Project
  updatedFields: [String!]
  previousValues: ProjectPreviousValues
}

input ProjectSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProjectWhereInput
}

input ProjectUpdateInput {
  name: String
  strapline: String
  websiteURL: String
  websiteImage: String
  brief: String
  process: String
  adobeUrl: String
  githubUrl: String
  cleanUrl: String
}

input ProjectUpdateManyMutationInput {
  name: String
  strapline: String
  websiteURL: String
  websiteImage: String
  brief: String
  process: String
  adobeUrl: String
  githubUrl: String
  cleanUrl: String
}

input ProjectWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  strapline: String

  """All values that are not equal to given value."""
  strapline_not: String

  """All values that are contained in given list."""
  strapline_in: [String!]

  """All values that are not contained in given list."""
  strapline_not_in: [String!]

  """All values less than the given value."""
  strapline_lt: String

  """All values less than or equal the given value."""
  strapline_lte: String

  """All values greater than the given value."""
  strapline_gt: String

  """All values greater than or equal the given value."""
  strapline_gte: String

  """All values containing the given string."""
  strapline_contains: String

  """All values not containing the given string."""
  strapline_not_contains: String

  """All values starting with the given string."""
  strapline_starts_with: String

  """All values not starting with the given string."""
  strapline_not_starts_with: String

  """All values ending with the given string."""
  strapline_ends_with: String

  """All values not ending with the given string."""
  strapline_not_ends_with: String
  websiteURL: String

  """All values that are not equal to given value."""
  websiteURL_not: String

  """All values that are contained in given list."""
  websiteURL_in: [String!]

  """All values that are not contained in given list."""
  websiteURL_not_in: [String!]

  """All values less than the given value."""
  websiteURL_lt: String

  """All values less than or equal the given value."""
  websiteURL_lte: String

  """All values greater than the given value."""
  websiteURL_gt: String

  """All values greater than or equal the given value."""
  websiteURL_gte: String

  """All values containing the given string."""
  websiteURL_contains: String

  """All values not containing the given string."""
  websiteURL_not_contains: String

  """All values starting with the given string."""
  websiteURL_starts_with: String

  """All values not starting with the given string."""
  websiteURL_not_starts_with: String

  """All values ending with the given string."""
  websiteURL_ends_with: String

  """All values not ending with the given string."""
  websiteURL_not_ends_with: String
  websiteImage: String

  """All values that are not equal to given value."""
  websiteImage_not: String

  """All values that are contained in given list."""
  websiteImage_in: [String!]

  """All values that are not contained in given list."""
  websiteImage_not_in: [String!]

  """All values less than the given value."""
  websiteImage_lt: String

  """All values less than or equal the given value."""
  websiteImage_lte: String

  """All values greater than the given value."""
  websiteImage_gt: String

  """All values greater than or equal the given value."""
  websiteImage_gte: String

  """All values containing the given string."""
  websiteImage_contains: String

  """All values not containing the given string."""
  websiteImage_not_contains: String

  """All values starting with the given string."""
  websiteImage_starts_with: String

  """All values not starting with the given string."""
  websiteImage_not_starts_with: String

  """All values ending with the given string."""
  websiteImage_ends_with: String

  """All values not ending with the given string."""
  websiteImage_not_ends_with: String
  brief: String

  """All values that are not equal to given value."""
  brief_not: String

  """All values that are contained in given list."""
  brief_in: [String!]

  """All values that are not contained in given list."""
  brief_not_in: [String!]

  """All values less than the given value."""
  brief_lt: String

  """All values less than or equal the given value."""
  brief_lte: String

  """All values greater than the given value."""
  brief_gt: String

  """All values greater than or equal the given value."""
  brief_gte: String

  """All values containing the given string."""
  brief_contains: String

  """All values not containing the given string."""
  brief_not_contains: String

  """All values starting with the given string."""
  brief_starts_with: String

  """All values not starting with the given string."""
  brief_not_starts_with: String

  """All values ending with the given string."""
  brief_ends_with: String

  """All values not ending with the given string."""
  brief_not_ends_with: String
  process: String

  """All values that are not equal to given value."""
  process_not: String

  """All values that are contained in given list."""
  process_in: [String!]

  """All values that are not contained in given list."""
  process_not_in: [String!]

  """All values less than the given value."""
  process_lt: String

  """All values less than or equal the given value."""
  process_lte: String

  """All values greater than the given value."""
  process_gt: String

  """All values greater than or equal the given value."""
  process_gte: String

  """All values containing the given string."""
  process_contains: String

  """All values not containing the given string."""
  process_not_contains: String

  """All values starting with the given string."""
  process_starts_with: String

  """All values not starting with the given string."""
  process_not_starts_with: String

  """All values ending with the given string."""
  process_ends_with: String

  """All values not ending with the given string."""
  process_not_ends_with: String
  adobeUrl: String

  """All values that are not equal to given value."""
  adobeUrl_not: String

  """All values that are contained in given list."""
  adobeUrl_in: [String!]

  """All values that are not contained in given list."""
  adobeUrl_not_in: [String!]

  """All values less than the given value."""
  adobeUrl_lt: String

  """All values less than or equal the given value."""
  adobeUrl_lte: String

  """All values greater than the given value."""
  adobeUrl_gt: String

  """All values greater than or equal the given value."""
  adobeUrl_gte: String

  """All values containing the given string."""
  adobeUrl_contains: String

  """All values not containing the given string."""
  adobeUrl_not_contains: String

  """All values starting with the given string."""
  adobeUrl_starts_with: String

  """All values not starting with the given string."""
  adobeUrl_not_starts_with: String

  """All values ending with the given string."""
  adobeUrl_ends_with: String

  """All values not ending with the given string."""
  adobeUrl_not_ends_with: String
  githubUrl: String

  """All values that are not equal to given value."""
  githubUrl_not: String

  """All values that are contained in given list."""
  githubUrl_in: [String!]

  """All values that are not contained in given list."""
  githubUrl_not_in: [String!]

  """All values less than the given value."""
  githubUrl_lt: String

  """All values less than or equal the given value."""
  githubUrl_lte: String

  """All values greater than the given value."""
  githubUrl_gt: String

  """All values greater than or equal the given value."""
  githubUrl_gte: String

  """All values containing the given string."""
  githubUrl_contains: String

  """All values not containing the given string."""
  githubUrl_not_contains: String

  """All values starting with the given string."""
  githubUrl_starts_with: String

  """All values not starting with the given string."""
  githubUrl_not_starts_with: String

  """All values ending with the given string."""
  githubUrl_ends_with: String

  """All values not ending with the given string."""
  githubUrl_not_ends_with: String
  cleanUrl: String

  """All values that are not equal to given value."""
  cleanUrl_not: String

  """All values that are contained in given list."""
  cleanUrl_in: [String!]

  """All values that are not contained in given list."""
  cleanUrl_not_in: [String!]

  """All values less than the given value."""
  cleanUrl_lt: String

  """All values less than or equal the given value."""
  cleanUrl_lte: String

  """All values greater than the given value."""
  cleanUrl_gt: String

  """All values greater than or equal the given value."""
  cleanUrl_gte: String

  """All values containing the given string."""
  cleanUrl_contains: String

  """All values not containing the given string."""
  cleanUrl_not_contains: String

  """All values starting with the given string."""
  cleanUrl_starts_with: String

  """All values not starting with the given string."""
  cleanUrl_not_starts_with: String

  """All values ending with the given string."""
  cleanUrl_ends_with: String

  """All values not ending with the given string."""
  cleanUrl_not_ends_with: String
}

input ProjectWhereUniqueInput {
  id: ID
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project]!
  user(where: UserWhereUniqueInput!): User
  project(where: ProjectWhereUniqueInput!): Project
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  projectsConnection(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  project(where: ProjectSubscriptionWhereInput): ProjectSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
